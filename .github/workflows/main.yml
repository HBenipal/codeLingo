name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, admin, backend/user-service, backend/auth-service, backend/problem-service, backend/lesson-service, backend/match-making-service]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          npm install
      
      - name: Run tests
        run: |
          cd ${{ matrix.service }}
          npm test

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service: [frontend, admin, backend/user-service, backend/auth-service, backend/problem-service, backend/lesson-service, backend/match-making-service]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and Push Docker image
        run: |
          SERVICE_NAME=$(basename ${{ matrix.service }})
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$SERVICE_NAME:latest ${{ matrix.service }}
          docker push ${{ secrets.DOCKER_USERNAME }}/$SERVICE_NAME:latest
      
      - name: Build and Push Versioned Docker image
        run: |
          SERVICE_NAME=$(basename ${{ matrix.service }})
          VERSION=$(date +'%Y%m%d%H%M%S')
          docker build -t ${{ secrets.DOCKER_USERNAME }}/$SERVICE_NAME:$VERSION ${{ matrix.service }}
          docker push ${{ secrets.DOCKER_USERNAME }}/$SERVICE_NAME:$VERSION
